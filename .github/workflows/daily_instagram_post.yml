# .github/workflows/daily_instagram_post.yml
# Automates daily Instagram carousel posts

name: Daily Instagram Post

on:
  schedule:
    # Run daily at 9 AM EST (14:00 UTC)
    - cron: '0 14 * * *'
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  post_to_instagram:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests Pillow python-dotenv
      
      - name: Fetch latest stories from WordPress
        id: fetch_stories
        run: |
          python << 'EOF'
          import requests
          import json
          import xml.etree.ElementTree as ET
          import html
          import re
          
          # Fetch RSS feed
          response = requests.get('https://dentaldailybrief.com/feed/')
          
          # Parse XML
          root = ET.fromstring(response.content)
          
          stories = []
          # Get first 3 items from RSS
          for item in root.findall('.//item')[:3]:
              title = item.find('title').text
              description = item.find('description').text
              
              # Clean HTML from description
              description = html.unescape(description)
              # Remove HTML tags
              description = re.sub('<[^<]+?>', '', description)
              
              # Get first 200 chars as summary
              summary = description[:200].strip()
              if len(summary) >= 200:
                  summary += '...'
              
              stories.append({
                  'headline': title,
                  'summary': summary
              })
          
          # Save to file
          with open('stories.json', 'w') as f:
              json.dump(stories, f)
          
          print(f"Fetched {len(stories)} stories from RSS")
          EOF
      
      - name: Generate carousel images
        run: |
          python << 'EOF'
          import json
          from instagram_carousel_generator import InstagramCarouselGenerator
          
          # Load stories
          with open('stories.json', 'r') as f:
              stories = json.load(f)
          
          # Generate images
          generator = InstagramCarouselGenerator()
          image_paths = generator.generate_carousel(stories)
          
          # Save paths for next step
          with open('image_paths.json', 'w') as f:
              json.dump(image_paths, f)
          
          print(f"Generated {len(image_paths)} carousel images")
          EOF
      
      - name: Post to Instagram
        env:
          INSTAGRAM_ACCESS_TOKEN: ${{ secrets.INSTAGRAM_ACCESS_TOKEN }}
          INSTAGRAM_ACCOUNT_ID: ${{ secrets.INSTAGRAM_ACCOUNT_ID }}
        run: |
          python << 'EOF'
          import json
          from instagram_poster import automate_daily_post
          
          # Load stories
          with open('stories.json', 'r') as f:
              stories = json.load(f)
          
          # Run automation
          post_id = automate_daily_post(stories)
          
          if post_id:
              print("✅ Successfully posted to Instagram!")
          else:
              print("❌ Failed to post to Instagram")
              exit(1)
          EOF
      
      - name: Upload images as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instagram-carousel-${{ github.run_number }}
          path: instagram_posts/
          retention-days: 7
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "Instagram posting failed! Check the logs."

      - name: Notify on success
        if: success()
        run: |
          echo "✅ Instagram post successful!"
